# config.py
"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è Marketing Mix Model –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
"""

# ==========================================
# –¶–í–ï–¢–û–í–´–ï –ü–ê–õ–ò–¢–†–´
# ==========================================

COLOR_PALETTE = {
    'primary': '#1f77b4',
    'secondary': '#ff7f0e', 
    'success': '#2ca02c',
    'danger': '#d62728',
    'warning': '#ff9800',
    'info': '#17a2b8'
}

MEDIA_COLORS = {
    'facebook': '#1877f2',
    'google': '#4285f4',
    'tiktok': '#000000',
    'youtube': '#ff0000',
    'instagram': '#e4405f',
    'offline': '#6c757d',
    'base': '#343a40',
    'search': '#4285f4',
    'social': '#1877f2',
    'display': '#ff7f0e',
    'video': '#ff0000'
}

# ==========================================
# –ù–ê–°–¢–†–û–ô–ö–ò –ú–û–î–ï–õ–ò
# ==========================================

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–∞–Ω–∞–ª–æ–≤
CHANNEL_PRESETS = {
    'paid_search': {
        'decay_range': (0.2, 0.6), 
        'alpha_range': (0.8, 1.5),
        'default_decay': 0.4,
        'default_alpha': 1.0
    },
    'social_media': {
        'decay_range': (0.1, 0.4), 
        'alpha_range': (0.5, 1.2),
        'default_decay': 0.3,
        'default_alpha': 0.8
    },
    'display': {
        'decay_range': (0.3, 0.7), 
        'alpha_range': (0.6, 1.3),
        'default_decay': 0.5,
        'default_alpha': 1.0
    },
    'video': {
        'decay_range': (0.4, 0.8), 
        'alpha_range': (0.7, 1.4),
        'default_decay': 0.6,
        'default_alpha': 1.2
    },
    'offline': {
        'decay_range': (0.5, 0.9), 
        'alpha_range': (0.4, 1.0),
        'default_decay': 0.7,
        'default_alpha': 0.8
    },
    'default': {
        'decay_range': (0.2, 0.7), 
        'alpha_range': (0.5, 1.5),
        'default_decay': 0.5,
        'default_alpha': 1.0
    }
}

# ==========================================
# –ù–ê–°–¢–†–û–ô–ö–ò GRID SEARCH
# ==========================================

GRID_SEARCH_MODES = {
    '–ë—ã—Å—Ç—Ä—ã–π': {
        'decay_steps': 2,
        'alpha_steps': 2,
        'gamma_steps': 2,
        'cv_folds': 2,
        'max_combinations': 64,
        'estimated_time': '2-5 –º–∏–Ω—É—Ç'
    },
    '–°—Ä–µ–¥–Ω–∏–π': {
        'decay_steps': 3,
        'alpha_steps': 3,
        'gamma_steps': 3,
        'cv_folds': 3,
        'max_combinations': 512,
        'estimated_time': '5-15 –º–∏–Ω—É—Ç'
    },
    '–ü–æ–ª–Ω—ã–π': {
        'decay_steps': 4,
        'alpha_steps': 4,
        'gamma_steps': 3,
        'cv_folds': 3,
        'max_combinations': 2000,
        'estimated_time': '15-60 –º–∏–Ω—É—Ç'
    }
}

# ==========================================
# –ë–ò–ó–ù–ï–°-–ü–†–ê–í–ò–õ–ê –ò –ü–û–†–û–ì–ò
# ==========================================

# –ü–æ—Ä–æ–≥–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏
MODEL_QUALITY_THRESHOLDS = {
    'excellent': {'r2': 0.8, 'accuracy': 85, 'score': 95},
    'good': {'r2': 0.7, 'accuracy': 75, 'score': 80},
    'satisfactory': {'r2': 0.5, 'accuracy': 60, 'score': 65},
    'poor': {'r2': 0.0, 'accuracy': 0, 'score': 40}
}

# –ü–æ—Ä–æ–≥–∏ ROAS –ø–æ –æ—Ç—Ä–∞—Å–ª—è–º
ROAS_BENCHMARKS = {
    'ecommerce': {
        'excellent': 4.0,
        'good': 2.5,
        'acceptable': 1.5,
        'poor': 1.0
    },
    'fmcg': {
        'excellent': 3.0,
        'good': 2.0,
        'acceptable': 1.2,
        'poor': 1.0
    },
    'b2b': {
        'excellent': 5.0,
        'good': 3.0,
        'acceptable': 2.0,
        'poor': 1.0
    }
}

# ==========================================
# –ù–ê–°–¢–†–û–ô–ö–ò –ò–ù–¢–ï–†–§–ï–ô–°–ê
# ==========================================

# –°—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
APP_PAGES = [
    "üè† –ì–ª–∞–≤–Ω–∞—è", 
    "üìä –î–∞–Ω–Ω—ã–µ", 
    "‚öôÔ∏è –ú–æ–¥–µ–ª—å", 
    "üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã", 
    "üí∞ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", 
    "üîÆ –°—Ü–µ–Ω–∞—Ä–∏–∏"
]

# CSS —Å—Ç–∏–ª–∏ –¥–ª—è Streamlit
CUSTOM_CSS = """
<style>
.metric-card {
    background-color: #f0f2f6;
    padding: 1rem;
    border-radius: 0.5rem;
    margin: 0.5rem 0;
}
.stAlert > div {
    padding: 1rem;
}
.parameter-explanation {
    background-color: #f8f9fa;
    padding: 0.8rem;
    border-left: 4px solid #17a2b8;
    margin: 0.5rem 0;
}
</style>
"""

# ==========================================
# –ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê –î–õ–Ø –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –¢–ò–ü–û–í –°–¢–û–õ–ë–¶–û–í
# ==========================================

TARGET_KEYWORDS = ['orders', 'sales', 'revenue', '–∑–∞–∫–∞–∑', '–ø—Ä–æ–¥–∞–∂–∏', '–≤—ã—Ä—É—á–∫–∞']
MEDIA_KEYWORDS = ['spend', 'cost', 'budget', '—Ä–∞—Å—Ö–æ–¥', '–∑–∞—Ç—Ä–∞—Ç', '–±—é–¥–∂–µ—Ç']
EXTERNAL_KEYWORDS = ['holiday', 'promo', 'season', 'competitor', '–ø—Ä–∞–∑–¥–Ω–∏–∫', '–ø—Ä–æ–º–æ', '—Å–µ–∑–æ–Ω', '–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç']

# ==========================================
# –ù–ê–°–¢–†–û–ô–ö–ò –î–ê–ù–ù–´–•
# ==========================================

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö
DEMO_DATA_CONFIG = {
    'n_periods': 104,  # 2 –≥–æ–¥–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    'frequency': 'W',
    'start_date': '2023-01-01',
    'seed': 42,
    'base_orders': 8000,
    'noise_level': 0.1,
    'seasonal_amplitude': 0.3,
    'trend_rate': 0.002
}

# –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–∞–Ω–Ω—ã–º
DATA_REQUIREMENTS = {
    'min_periods': 20,
    'min_media_channels': 1,
    'max_missing_ratio': 0.1,
    'min_variance_threshold': 0.01
}

# ==========================================
# –°–û–û–ë–©–ï–ù–ò–Ø –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
# ==========================================

HELP_MESSAGES = {
    'adstock_decay': "–î–æ–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞, –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ–≥–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥ (0.1 = –±—ã—Å—Ç—Ä–æ–µ –∑–∞—Ç—É—Ö–∞–Ω–∏–µ, 0.8 = –º–µ–¥–ª–µ–Ω–Ω–æ–µ)",
    'saturation_alpha': "–§–æ—Ä–º–∞ –∫—Ä–∏–≤–æ–π –Ω–∞—Å—ã—â–µ–Ω–∏—è (<1 = –º–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç, >1 = S-–∫—Ä–∏–≤–∞—è)",
    'saturation_gamma': "–¢–æ—á–∫–∞ –ø–æ–ª—É–Ω–∞—Å—ã—â–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å—Ä–µ–¥–Ω–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤",
    'regularization': "Ridge: —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è, Lasso: –æ—Ç–±–æ—Ä –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, ElasticNet: –±–∞–ª–∞–Ω—Å",
    'cv_folds': "–ë–æ–ª—å—à–µ —Ñ–æ–ª–¥–æ–≤ = –Ω–∞–¥–µ–∂–Ω–µ–µ –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏",
    'grid_search_mode': "–í—ã–±–µ—Ä–∏—Ç–µ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Å–∫–æ—Ä–æ—Å—Ç—å—é –∏ –∫–∞—á–µ—Å—Ç–≤–æ–º –ø–æ–∏—Å–∫–∞"
}

BUSINESS_EXPLANATIONS = {
    'waterfall_chart': """
    **–î–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è –ø—Ä–æ–¥–∞–∂** –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤–∞—à–∏ –∑–∞–∫–∞–∑—ã:
    - **Base** = –∑–∞–∫–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–¥—É—Ç "—Å–∞–º–∏ –ø–æ —Å–µ–±–µ" (–æ—Ä–≥–∞–Ω–∏–∫–∞, –±—Ä–µ–Ω–¥–∏–Ω–≥)
    - **–ú–µ–¥–∏–∞-–∫–∞–Ω–∞–ª—ã** = –∑–∞–∫–∞–∑—ã –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã
    """,
    'roas_interpretation': """
    **ROAS –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–¥–∞—á—É —Å –∫–∞–∂–¥–æ–≥–æ —Ä—É–±–ª—è —Ä–µ–∫–ª–∞–º—ã:**
    - ROAS = 3.0 –æ–∑–Ω–∞—á–∞–µ—Ç 3 —Ä—É–±–ª—è –¥–æ—Ö–æ–¥–∞ —Å 1 —Ä—É–±–ª—è —Ä–µ–∫–ª–∞–º—ã
    - ROAS < 1.0 = —É–±—ã—Ç–æ—á–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞
    - ROAS > 3.0 = –æ—á–µ–Ω—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞
    """,
    'optimization_logic': """
    **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏—â–µ—Ç –ª—É—á—à–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞:**
    - –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    - –£—á–∏—Ç—ã–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç—ã –Ω–∞—Å—ã—â–µ–Ω–∏—è
    - –ù–∞—Ö–æ–¥–∏—Ç –±–∞–ª–∞–Ω—Å –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    """
}

# ==========================================
# –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –ß–ò–°–ï–õ
# ==========================================

def format_number(value, format_type='default'):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
    if format_type == 'currency':
        return f"{value:,.0f} ‚ÇΩ"
    elif format_type == 'percentage':
        return f"{value:.1f}%"
    elif format_type == 'ratio':
        return f"{value:.2f}"
    elif format_type == 'large_number':
        if value >= 1_000_000:
            return f"{value/1_000_000:.1f}M"
        elif value >= 1_000:
            return f"{value/1_000:.1f}K"
        else:
            return f"{value:.0f}"
    else:
        return f"{value:,.0f}"

def get_roas_color(roas_value, industry='ecommerce'):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è ROAS –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤."""
    benchmarks = ROAS_BENCHMARKS.get(industry, ROAS_BENCHMARKS['ecommerce'])
    
    if roas_value >= benchmarks['excellent']:
        return COLOR_PALETTE['success']
    elif roas_value >= benchmarks['good']:
        return COLOR_PALETTE['info']
    elif roas_value >= benchmarks['acceptable']:
        return COLOR_PALETTE['warning']
    else:
        return COLOR_PALETTE['danger']

def interpret_model_quality(r2_score, accuracy_score):
    """–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏."""
    for level, thresholds in MODEL_QUALITY_THRESHOLDS.items():
        if r2_score >= thresholds['r2'] and accuracy_score >= thresholds['accuracy']:
            return level, thresholds['score']
    
    return 'poor', MODEL_QUALITY_THRESHOLDS['poor']['score']