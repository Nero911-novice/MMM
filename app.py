import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
from .model import MarketingMixModel
from .data_processor import DataProcessor
from .visualizer import Visualizer
from .optimizer import BudgetOptimizer

st.set_page_config(
    page_title="Marketing Mix Model",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS —Å—Ç–∏–ª–∏
st.markdown("""
<style>
.metric-card {
    background-color: #f0f2f6;
    padding: 1rem;
    border-radius: 0.5rem;
    margin: 0.5rem 0;
}
.stAlert > div {
    padding: 1rem;
}
</style>
""", unsafe_allow_html=True)

class MMM_App:
    def __init__(self):
        self.processor = DataProcessor()
        self.visualizer = Visualizer()
        self.optimizer = BudgetOptimizer()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if 'model' not in st.session_state:
            st.session_state.model = None
        if 'data' not in st.session_state:
            st.session_state.data = None
        if 'model_fitted' not in st.session_state:
            st.session_state.model_fitted = False

    def run(self):
        st.title("üéØ Marketing Mix Model")
        st.markdown("**–°–∏—Å—Ç–µ–º–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±—é–¥–∂–µ—Ç–æ–≤**")
        
        # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        with st.sidebar:
            st.header("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
            page = st.selectbox(
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
                ["üè† –ì–ª–∞–≤–Ω–∞—è", "üìä –î–∞–Ω–Ω—ã–µ", "‚öôÔ∏è –ú–æ–¥–µ–ª—å", "üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã", "üí∞ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", "üîÆ –°—Ü–µ–Ω–∞—Ä–∏–∏"]
            )
            
            st.markdown("---")
            st.markdown("### –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏")
            if st.session_state.model_fitted:
                st.success("‚úÖ –ú–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞")
            else:
                st.warning("‚ö†Ô∏è –ú–æ–¥–µ–ª—å –Ω–µ –æ–±—É—á–µ–Ω–∞")
        
        # –†–æ—É—Ç–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü
        if page == "üè† –ì–ª–∞–≤–Ω–∞—è":
            self.show_home()
        elif page == "üìä –î–∞–Ω–Ω—ã–µ":
            self.show_data()
        elif page == "‚öôÔ∏è –ú–æ–¥–µ–ª—å":
            self.show_model()
        elif page == "üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã":
            self.show_results()
        elif page == "üí∞ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è":
            self.show_optimization()
        elif page == "üîÆ –°—Ü–µ–Ω–∞—Ä–∏–∏":
            self.show_scenarios()

    def show_home(self):
        st.header("Marketing Mix Model - –°–∏—Å—Ç–µ–º–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±—é–¥–∂–µ—Ç–æ–≤")
        
        col1, col2 = st.columns([2, 1])
        
        with col1:
            st.markdown("""
            ### –ß—Ç–æ —Ç–∞–∫–æ–µ Marketing Mix Modeling?
            
            MMM ‚Äî —ç—Ç–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤–ª–∏—è–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ 
            –Ω–∞ –±–∏–∑–Ω–µ—Å-–º–µ—Ç—Ä–∏–∫–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞.
            
            #### –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
            
            **üìä –ê–Ω–∞–ª–∏–∑ –∞—Ç—Ä–∏–±—É—Ü–∏–∏**
            - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞ –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ –ø—Ä–æ–¥–∞–∂–∏
            - –£—á–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –ø–µ—Ä–µ–Ω–æ—Å–∞ (adstock) –∏ –Ω–∞—Å—ã—â–µ–Ω–∏—è (saturation)
            - –ò–∑–º–µ—Ä–µ–Ω–∏–µ ROAS –ø–æ –∫–∞–Ω–∞–ª–∞–º
            
            **üéØ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±—é–¥–∂–µ—Ç–∞**
            - –ü–æ–∏—Å–∫ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
            - –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –º–µ–¥–∏–∞-–ø–ª–∞–Ω–∞—Ö
            - –°—Ü–µ–Ω–∞—Ä–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            
            **üîÆ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ**
            - "What-if" –∞–Ω–∞–ª–∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
            - –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–ª–∏—è–Ω–∏—è –≤–Ω–µ—à–Ω–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
            - –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ –±—É–¥—É—â–∏–µ –ø–µ—Ä–∏–æ–¥—ã
            """)
            
        with col2:
            st.markdown("### –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å")
            st.latex(r'''Sales_t = Base + \sum_{i=1}^{n} Adstock_i(Media_i) \times Saturation_i(Media_i) + Externals_t''')
            
            st.markdown("**–ì–¥–µ:**")
            st.markdown("- Base ‚Äî –±–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è –ø—Ä–æ–¥–∞–∂")
            st.markdown("- Adstock ‚Äî —ç—Ñ—Ñ–µ–∫—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞")
            st.markdown("- Saturation ‚Äî —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞—Å—ã—â–µ–Ω–∏—è")
            st.markdown("- Externals ‚Äî –≤–Ω–µ—à–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã")
            
            if st.button("üé≤ –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ", type="primary"):
                demo_data = self.processor.generate_demo_data()
                st.session_state.data = demo_data
                st.success("–î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
                st.rerun()
        
        st.markdown("---")
        
        # –î–µ–º–æ –º–µ—Ç—Ä–∏–∫–∏
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.metric("–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞", "24 –º–µ—Å—è—Ü–∞")
        
        with col2:
            st.metric("–ú–µ–¥–∏–∞-–∫–∞–Ω–∞–ª—ã", "5 –∫–∞–Ω–∞–ª–æ–≤")
        
        with col3:
            st.metric("–¢–æ—á–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏", "R¬≤ > 0.8")

    def show_data(self):
        st.header("üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏")
        
        tab1, tab2, tab3 = st.tabs(["–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö", "–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö", "–í–∞–ª–∏–¥–∞—Ü–∏—è"])
        
        with tab1:
            col1, col2 = st.columns(2)
            
            with col1:
                st.subheader("–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞")
                uploaded_file = st.file_uploader(
                    "–í—ã–±–µ—Ä–∏—Ç–µ CSV —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏",
                    type=['csv'],
                    help="–§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä—è–¥—ã –ø—Ä–æ–¥–∞–∂, –º–µ–¥–∏–∞-—Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –≤–Ω–µ—à–Ω–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤"
                )
                
                if uploaded_file is not None:
                    try:
                        data = pd.read_csv(uploaded_file)
                        data['date'] = pd.to_datetime(data['date'])
                        st.session_state.data = data
                        st.success(f"–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {len(data)} —Å—Ç—Ä–æ–∫")
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {str(e)}")
            
            with col2:
                st.subheader("–î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ")
                if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ"):
                    demo_data = self.processor.generate_demo_data()
                    st.session_state.data = demo_data
                    st.success("–î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")
                    st.rerun()
        
        with tab2:
            if st.session_state.data is not None:
                data = st.session_state.data
                
                st.subheader("–û–±–∑–æ—Ä –¥–∞–Ω–Ω—ã—Ö")
                st.dataframe(data.head(10), use_container_width=True)
                
                col1, col2, col3, col4 = st.columns(4)
                with col1:
                    st.metric("–°—Ç—Ä–æ–∫", len(data))
                with col2:
                    st.metric("–°—Ç–æ–ª–±—Ü–æ–≤", len(data.columns))
                with col3:
                    st.metric("–ü–µ—Ä–∏–æ–¥", f"{data['date'].min().strftime('%Y-%m')} - {data['date'].max().strftime('%Y-%m')}")
                with col4:
                    st.metric("–ü—Ä–æ–ø—É—Å–∫–∏", data.isnull().sum().sum())
                
                # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä—è–¥—ã
                st.subheader("–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä—è–¥—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫")
                metrics_cols = [col for col in data.columns if any(keyword in col.lower() 
                               for keyword in ['orders', 'sales', 'revenue', '–∑–∞–∫–∞–∑'])]
                
                if metrics_cols:
                    fig = px.line(data, x='date', y=metrics_cols[0], 
                                title=f"–î–∏–Ω–∞–º–∏–∫–∞ {metrics_cols[0]}")
                    st.plotly_chart(fig, use_container_width=True)
            else:
                st.info("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
        
        with tab3:
            if st.session_state.data is not None:
                validation_results = self.processor.validate_data(st.session_state.data)
                
                st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
                
                for check, result in validation_results.items():
                    if result['status']:
                        st.success(f"‚úÖ {check}: {result['message']}")
                    else:
                        st.error(f"‚ùå {check}: {result['message']}")
            else:
                st.info("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏")

    def show_model(self):
        st.header("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏")

        if st.session_state.data is None:
            st.warning("–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ")
            return

        data = st.session_state.data

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–µ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ MMM
        with st.expander("üìö –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤—ã Marketing Mix Model", expanded=False):
            st.markdown("""
        ### –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è –æ—Å–Ω–æ–≤–∞ Marketing Mix Modeling
        
        **Marketing Mix Model** –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —ç–∫–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫—É—é –º–æ–¥–µ–ª—å, –æ—Å–Ω–æ–≤–∞–Ω–Ω—É—é –Ω–∞ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤. 
        –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞—Ü–∏—è –±–∞–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –∞–¥–¥–∏—Ç–∏–≤–Ω–æ–π –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–æ–¥–∞–∂:
        
        **Sales(t) = Base(t) + Œ£[Adstock(Media_i) √ó Saturation(Media_i)] + External_factors(t) + Œµ(t)**
        
        **–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–¥–µ–ª–∏:**
        
        1. **Base(t)** ‚Äî –±–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è –ø—Ä–æ–¥–∞–∂, –≤–∫–ª—é—á–∞—é—â–∞—è:
           - –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π —Ä–æ—Å—Ç –±—Ä–µ–Ω–¥–∞
           - –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
           - –í–ª–∏—è–Ω–∏–µ –Ω–µ–∏–∑–º–µ—Ä—è–µ–º—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤ (word-of-mouth, brand equity)
        
        2. **Media Effects** ‚Äî —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ–¥–∏–∞-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑:
           - **Adstock**: –º–æ–¥–µ–ª–∏—Ä—É–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è
           - **Saturation**: —É—á–∏—Ç—ã–≤–∞–µ—Ç —É–±—ã–≤–∞—é—â—É—é –ø—Ä–µ–¥–µ–ª—å–Ω—É—é –æ—Ç–¥–∞—á—É –æ—Ç —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
        
        3. **External_factors(t)** ‚Äî –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
           - –ú–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
           - –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
           - –°–µ–∑–æ–Ω–Ω—ã–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        
        4. **Œµ(t)** ‚Äî —Å–ª—É—á–∞–π–Ω–∞—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        
        **–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—è –º–æ–¥–µ–ª–∏:**
        - –õ–∏–Ω–µ–π–Ω–∞—è –∞–¥–¥–∏—Ç–∏–≤–Ω–æ—Å—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª–æ–≤
        - –°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ—Å—Ç—å –æ—Å—Ç–∞—Ç–∫–æ–≤ –º–æ–¥–µ–ª–∏
        - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∞–≤—Ç–æ–∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –≤ –æ—Å—Ç–∞—Ç–∫–∞—Ö
        - –ì–æ–º–æ—Å–∫–µ–¥–∞—Å—Ç–∏—á–Ω–æ—Å—Ç—å —Å–ª—É—á–∞–π–Ω—ã—Ö –æ—à–∏–±–æ–∫
        """)
    
        tab1, tab2, tab3 = st.tabs(["–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏", "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏", "–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏"])

        with tab1:
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–∏
            with st.expander("üìñ –¢–∏–ø–æ–ª–æ–≥–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ MMM", expanded=False):
                st.markdown("""
            ### –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ Marketing Mix Model
            
            **1. –ó–∞–≤–∏—Å–∏–º–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è (Target Variable)**
            - –û—Å–Ω–æ–≤–Ω–∞—è KPI, –∫–æ—Ç–æ—Ä—É—é –º–æ–¥–µ–ª—å –¥–æ–ª–∂–Ω–∞ –æ–±—ä—è—Å–Ω–∏—Ç—å –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å
            - –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä—è–¥ —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å—é
            - –ü—Ä–∏–º–µ—Ä—ã: –∑–∞–∫–∞–∑—ã, –ø—Ä–æ–¥–∞–∂–∏, –≤—ã—Ä—É—á–∫–∞, –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
            - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ –¥–∏—Å–ø–µ—Ä—Å–∏–∏
            
            **2. –ú–µ–¥–∏–∞-–∫–∞–Ω–∞–ª—ã (Media Variables)**
            - –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏
            - –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å target, –Ω–∞–ª–∏—á–∏–µ –ª–∞–≥–æ–≤
            - –ü—Ä–∏–º–µ—Ä—ã: –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ paid search, display, social media, TV, radio
            - –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–∞–Ω–Ω—ã–º: –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è/–º–µ—Å—è—á–Ω–∞—è –∞–≥—Ä–µ–≥–∞—Ü–∏—è, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–ø—É—Å–∫–æ–≤
            
            **3. –í–Ω–µ—à–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã (External Variables)**
            - –ù–µ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –≤–ª–∏—è—é—â–∏–µ –Ω–∞ —Ü–µ–ª–µ–≤—É—é –º–µ—Ç—Ä–∏–∫—É
            - –¢–∏–ø—ã: –º–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ, —Å–µ–∑–æ–Ω–Ω—ã–µ
            - –§—É–Ω–∫—Ü–∏—è: –∫–æ–Ω—Ç—Ä–æ–ª—å —Å–º–µ—â–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫ –º–µ–¥–∏–∞-—ç—Ñ—Ñ–µ–∫—Ç–æ–≤
            - –ü—Ä–∏–º–µ—Ä—ã: –∏–Ω–¥–µ–∫—Å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏—Ö —Ü–µ–Ω, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
            
            **4. –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (Control Variables)**
            - –§–∞–∫—Ç–æ—Ä—ã, –Ω–µ —è–≤–ª—è—é—â–∏–µ—Å—è –º–µ–¥–∏–∞, –Ω–æ –≤–ª–∏—è—é—â–∏–µ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            - –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: —Å–Ω–∏–∂–µ–Ω–∏–µ –Ω–µ–æ–±—ä—è—Å–Ω–µ–Ω–Ω–æ–π –¥–∏—Å–ø–µ—Ä—Å–∏–∏ –º–æ–¥–µ–ª–∏
            - –ü—Ä–∏–º–µ—Ä—ã: —Ü–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞, –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –ø—Ä–æ–º–æ-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            """)
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("–ó–∞–≤–∏—Å–∏–º–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è")
            target_options = [col for col in data.columns if any(keyword in col.lower() 
                            for keyword in ['orders', 'sales', 'revenue', '–∑–∞–∫–∞–∑'])]
            target_var = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é –º–µ—Ç—Ä–∏–∫—É:", target_options)
            
            st.subheader("–ú–µ–¥–∏–∞-–∫–∞–Ω–∞–ª—ã")
            media_options = [col for col in data.columns if any(keyword in col.lower() 
                           for keyword in ['spend', 'cost', 'budget', '—Ä–∞—Å—Ö–æ–¥'])]
            selected_media = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª—ã:", media_options, default=media_options[:5])
        
        with col2:
            st.subheader("–í–Ω–µ—à–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã")
            external_options = [col for col in data.columns if any(keyword in col.lower() 
                              for keyword in ['holiday', 'promo', 'season', 'competitor', '–ø—Ä–∞–∑–¥–Ω–∏–∫'])]
            selected_external = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –≤–Ω–µ—à–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã:", external_options, default=external_options)
            
            st.subheader("–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ")
            control_options = [col for col in data.columns if col not in selected_media + selected_external + [target_var, 'date']]
            selected_controls = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:", control_options)
    
        with tab2:
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
            with st.expander("üî¨ –ù–∞—É—á–Ω—ã–µ –æ—Å–Ω–æ–≤—ã –º–µ–¥–∏–∞-—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π", expanded=False):
                st.markdown("""
            ### Adstock —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è (–≠—Ñ—Ñ–µ–∫—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞)
            
            **–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:**
            –†–µ–∫–ª–∞–º–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç—Å—è –º–æ–º–µ–Ω—Ç–æ–º —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏. Psychological theory of memory decay 
            –∏ consumer behavior research –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç—ã —Ä–µ–∫–ª–∞–º—ã –∑–∞—Ç—É—Ö–∞—é—Ç –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ.
            
            **–ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è Adstock –º–æ–¥–µ–ª—å:**
            ```
            Adstock(t) = Media(t) + Œª √ó Adstock(t-1)
            –≥–¥–µ Œª ‚àà [0,1] ‚Äî –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∑–∞—Ç—É—Ö–∞–Ω–∏—è
            ```
            
            **–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:**
            - **Œª = 0**: –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞ (–º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∑–∞—Ç—É—Ö–∞–Ω–∏–µ)
            - **Œª = 0.3**: 30% —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥
            - **Œª = 0.7**: –≤—ã—Å–æ–∫–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è
            
            **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞–Ω–∞–ª–∞–º:**
            - TV/Radio: Œª = 0.6-0.8 (–≤—ã—Å–æ–∫–æ–µ –æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ)
            - Digital: Œª = 0.2-0.5 (–±—ã—Å—Ç—Ä–æ–µ –∑–∞—Ç—É—Ö–∞–Ω–∏–µ)
            - Print: Œª = 0.4-0.7 (—Å—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)
            
            ### Saturation —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è (–≠—Ñ—Ñ–µ–∫—Ç –Ω–∞—Å—ã—â–µ–Ω–∏—è)
            
            **–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è —Ç–µ–æ—Ä–∏—è:**
            –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –∑–∞–∫–æ–Ω–µ —É–±—ã–≤–∞—é—â–µ–π –ø—Ä–µ–¥–µ–ª—å–Ω–æ–π –ø–æ–ª–µ–∑–Ω–æ—Å—Ç–∏. –ö–∞–∂–¥–∞—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞ 
            —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –ø—Ä–∏–Ω–æ—Å–∏—Ç –º–µ–Ω—å—à–∏–π –ø—Ä–∏—Ä–æ—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
            
            **Hill Saturation —Ñ—É–Ω–∫—Ü–∏—è:**
            ```
            Saturation = Media^Œ± / (Media^Œ± + Œ≥^Œ±)
            –≥–¥–µ Œ± ‚Äî —Ñ–æ—Ä–º–∞ –∫—Ä–∏–≤–æ–π, Œ≥ ‚Äî —Ç–æ—á–∫–∞ –ø–æ–ª—É–Ω–∞—Å—ã—â–µ–Ω–∏—è
            ```
            
            **–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:**
            - **Œ± < 1**: –∫—Ä–∏–≤–∞—è —Å –º–µ–¥–ª–µ–Ω–Ω—ã–º —Ä–æ—Å—Ç–æ–º –≤ –Ω–∞—á–∞–ª–µ
            - **Œ± = 1**: –ª–∏–Ω–µ–π–Ω–∞—è —Å–≤—è–∑—å –¥–æ —Ç–æ—á–∫–∏ –Ω–∞—Å—ã—â–µ–Ω–∏—è
            - **Œ± > 1**: S-–æ–±—Ä–∞–∑–Ω–∞—è –∫—Ä–∏–≤–∞—è —Å –ø–æ—Ä–æ–≥–æ–≤—ã–º —ç—Ñ—Ñ–µ–∫—Ç–æ–º
            - **Œ≥**: —É—Ä–æ–≤–µ–Ω—å –º–µ–¥–∏–∞-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 50% –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
            
            **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≥—Ä–∞–Ω–∏—Ü—ã:**
            - –ó—Ä–µ–ª—ã–µ –∫–∞–Ω–∞–ª—ã: Œ± = 0.6-1.2, Œ≥ –±–ª–∏–∑–∫–æ –∫ –º–µ–¥–∏–∞–Ω–Ω—ã–º —Ä–∞—Å—Ö–æ–¥–∞–º
            - –ù–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã: Œ± = 1.5-2.5, Œ≥ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã—à–µ –º–µ–¥–∏–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
            """)
        
        st.subheader("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã Adstock (—ç—Ñ—Ñ–µ–∫—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞)")
        
        adstock_params = {}
        for media in selected_media:
            with st.expander(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è {media}"):
                col1, col2 = st.columns(2)
                with col1:
                    decay = st.slider(f"Decay rate –¥–ª—è {media}", 0.0, 0.9, 0.5, 0.1, key=f"decay_{media}",
                                    help="–î–æ–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞, –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ–≥–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥")
                with col2:
                    max_lag = st.slider(f"Max lag –¥–ª—è {media}", 1, 12, 6, 1, key=f"lag_{media}",
                                      help="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∞ –≤ –ø–µ—Ä–∏–æ–¥–∞—Ö")
                adstock_params[media] = {'decay': decay, 'max_lag': max_lag}
        
        st.subheader("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã Saturation (—ç—Ñ—Ñ–µ–∫—Ç –Ω–∞—Å—ã—â–µ–Ω–∏—è)")
        saturation_params = {}
        for media in selected_media:
            with st.expander(f"Saturation –¥–ª—è {media}"):
                alpha = st.slider(f"Alpha –¥–ª—è {media}", 0.1, 3.0, 1.0, 0.1, key=f"alpha_{media}",
                                help="–§–æ—Ä–º–∞ –∫—Ä–∏–≤–æ–π –Ω–∞—Å—ã—â–µ–Ω–∏—è: <1 = –º–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç, >1 = S-–∫—Ä–∏–≤–∞—è")
                gamma = st.slider(f"Gamma –¥–ª—è {media}", 0.1, 2.0, 0.5, 0.1, key=f"gamma_{media}",
                                help="–¢–æ—á–∫–∞ –ø–æ–ª—É–Ω–∞—Å—ã—â–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å—Ä–µ–¥–Ω–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤")
                saturation_params[media] = {'alpha': alpha, 'gamma': gamma}
    
        with tab3:
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
            with st.expander("üìä –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –æ–±—É—á–µ–Ω–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏", expanded=False):
                st.markdown("""
            ### –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –≤ MMM
            
            **1. –†–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏—è (Regularization)**
            
            **Ridge —Ä–µ–≥—Ä–µ—Å—Å–∏—è (L2):**
            - –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–µ—Ç: ||y - XŒ≤||¬≤ + Œ±||Œ≤||¬≤
            - –≠—Ñ—Ñ–µ–∫—Ç: —Å–∂–∏–º–∞–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∫ –Ω—É–ª—é, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ
            - –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è: —Å–∏—Ç—É–∞—Ü–∏–π —Å –º—É–ª—å—Ç–∏–∫–æ–ª–ª–∏–Ω–µ–∞—Ä–Ω–æ—Å—Ç—å—é –º–µ–∂–¥—É –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª–∞–º–∏
            
            **Lasso —Ä–µ–≥—Ä–µ—Å—Å–∏—è (L1):**
            - –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–µ—Ç: ||y - XŒ≤||¬≤ + Œ±|Œ≤|
            - –≠—Ñ—Ñ–µ–∫—Ç: –æ–±–Ω—É–ª—è–µ—Ç –Ω–µ–∑–Ω–∞—á–∏–º—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ—Ç–±–æ—Ä –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
            - –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è: –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª–æ–≤
            
            **Elastic Net:**
            - –ö–æ–º–±–∏–Ω–∏—Ä—É–µ—Ç L1 –∏ L2 —Ä–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏—é
            - –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è: —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –∫ –æ—Ç–±–æ—Ä—É –∏ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
            
            **2. –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö**
            
            **–ü—Ä–∏–Ω—Ü–∏–ø:**
            –û–±—É—á–∞—é—â–∞—è –≤—ã–±–æ—Ä–∫–∞ –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è data leakage.
            
            **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
            - –ú–∏–Ω–∏–º—É–º 70% –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
            - –¢–µ—Å—Ç–æ–≤–∞—è –≤—ã–±–æ—Ä–∫–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–∫—Ä—ã–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–µ–∑–æ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
            - –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ <52 –Ω–µ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å cross-validation
            
            **3. –ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏**
            
            **R¬≤ (Coefficient of Determination):**
            - –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: –¥–æ–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–Ω–æ–π –¥–∏—Å–ø–µ—Ä—Å–∏–∏
            - –•–æ—Ä–æ—à–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è: >0.7 –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, >0.8 –¥–ª—è –º–µ—Å—è—á–Ω—ã—Ö
            
            **MAPE (Mean Absolute Percentage Error):**
            - –ë–∏–∑–Ω–µ—Å-–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: —Å—Ä–µ–¥–Ω—è—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞
            - –ü—Ä–∏–µ–º–ª–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: <15% –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            
            **4. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤**
            
            **–ö—Ä–∏—Ç–µ—Ä–∏–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏:**
            - –ù–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—å –æ—Å—Ç–∞—Ç–∫–æ–≤ (Shapiro-Wilk test)
            - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∞–≤—Ç–æ–∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ (Durbin-Watson test)
            - –ì–æ–º–æ—Å–∫–µ–¥–∞—Å—Ç–∏—á–Ω–æ—Å—Ç—å (Breusch-Pagan test)
            - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö —Å–¥–≤–∏–≥–æ–≤ (Chow test)
            """)
        
        st.subheader("–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏")
        
        col1, col2 = st.columns(2)
        with col1:
            train_ratio = st.slider("–î–æ–ª—è –æ–±—É—á–∞—é—â–µ–π –≤—ã–±–æ—Ä–∫–∏", 0.6, 0.9, 0.8, 0.05,
                                  help="–í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: –æ–±—É—á–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É–µ—Ç —Ç–µ—Å—Ç—É")
            regularization = st.selectbox("–¢–∏–ø —Ä–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏–∏", ["Ridge", "Lasso", "ElasticNet"],
                                        help="Ridge: —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è, Lasso: –æ—Ç–±–æ—Ä –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, ElasticNet: –±–∞–ª–∞–Ω—Å")
        
        with col2:
            alpha_reg = st.slider("–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏–∏", 0.001, 1.0, 0.01, 0.001,
                                help="–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç —Å–∏–ª—É —Ä–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏–∏: –±–æ–ª—å—à–µ = –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–µ–µ")
            cross_val_folds = st.slider("–ß–∏—Å–ª–æ —Ñ–æ–ª–¥–æ–≤ –¥–ª—è –∫—Ä–æ—Å—Å-–≤–∞–ª–∏–¥–∞—Ü–∏–∏", 3, 10, 5, 1,
                                      help="–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
                         
            if st.button("üöÄ –û–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å", type="primary"):
                with st.spinner("–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏..."):
                    try:
                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                        if not selected_media:
                            st.error("–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª")
                            return
                        
                        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
                        model = MarketingMixModel(
                            adstock_params=adstock_params,
                            saturation_params=saturation_params,
                            regularization=regularization,
                            alpha=alpha_reg
                        )
                        
                        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
                        X, y = self.processor.prepare_model_data(
                            data, target_var, selected_media, selected_external, selected_controls
                        )
                        
                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö
                        if len(X) < 20:
                            st.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ (–º–∏–Ω–∏–º—É–º 20 –Ω–∞–±–ª—é–¥–µ–Ω–∏–π)")
                            return
                        
                        # –û–±—É—á–µ–Ω–∏–µ
                        train_size = max(10, int(len(X) * train_ratio))  # –ú–∏–Ω–∏–º—É–º 10 –Ω–∞–±–ª—é–¥–µ–Ω–∏–π –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
                        X_train, X_test = X[:train_size], X[train_size:]
                        y_train, y_test = y[:train_size], y[train_size:]
                        
                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–∏
                        if len(X_test) == 0:
                            X_test = X_train.tail(5).copy()  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Ç–µ—Å—Ç–∞
                            y_test = y_train.tail(5).copy()
                        
                        model.fit(X_train, y_train)
                        
                        # –í–∞–ª–∏–¥–∞—Ü–∏—è
                        train_score = model.score(X_train, y_train)
                        test_score = model.score(X_test, y_test)
                        
                        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
                        st.session_state.model = model
                        st.session_state.model_fitted = True
                        st.session_state.X_train = X_train
                        st.session_state.X_test = X_test
                        st.session_state.y_train = y_train
                        st.session_state.y_test = y_test
                        st.session_state.target_var = target_var
                        st.session_state.selected_media = selected_media
                        st.session_state.selected_external = selected_external
                        st.session_state.selected_controls = selected_controls
                        
                        # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
                        st.success("–ú–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                        
                        col1, col2, col3 = st.columns(3)
                        with col1:
                            st.metric("R¬≤ (train)", f"{train_score:.3f}")
                        with col2:
                            st.metric("R¬≤ (test)", f"{test_score:.3f}")
                        with col3:
                            overfitting = train_score - test_score
                            st.metric("–ü–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ", f"{overfitting:.3f}", 
                                     delta=None if abs(overfitting) < 0.1 else "–í—ã—Å–æ–∫–æ–µ" if overfitting > 0.1 else "–ù–∏–∑–∫–æ–µ")
                        
                        # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –∫–∞—á–µ—Å—Ç–≤–µ –º–æ–¥–µ–ª–∏
                        if train_score < 0.5:
                            st.warning("‚ö†Ô∏è –ù–∏–∑–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.")
                        elif overfitting > 0.2:
                            st.warning("‚ö†Ô∏è –í—ã—Å–æ–∫–æ–µ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ. –£–≤–µ–ª–∏—á—å—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏–∏.")
                        
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏: {str(e)}")
                        st.info("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö.")

    def show_results(self):
        st.header("üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
        
        if not st.session_state.model_fitted:
            st.warning("–°–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å")
            return
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        required_session_vars = ['model', 'X_train', 'X_test', 'y_train', 'y_test', 'selected_media']
        missing_vars = [var for var in required_session_vars if var not in st.session_state or st.session_state[var] is None]
        
        if missing_vars:
            st.error(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ: {missing_vars}. –ü–µ—Ä–µ–æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å.")
            return
        
        model = st.session_state.model
        
        tab1, tab2, tab3, tab4 = st.tabs(["–ö–∞—á–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–∏", "–î–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è", "ROAS –∞–Ω–∞–ª–∏–∑", "–ö—Ä–∏–≤—ã–µ –Ω–∞—Å—ã—â–µ–Ω–∏—è"])
        
        with tab1:
            # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –∫–∞—á–µ—Å—Ç–≤–∞
            with st.expander("‚ùì –ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –º–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏?", expanded=False):
                st.markdown("""
                **–ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞** –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ –º–æ–¥–µ–ª—å –Ω–∞—É—á–∏–ª–∞—Å—å –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –≤–∞—à–∏ –ø—Ä–æ–¥–∞–∂–∏:
                
                üìä **–ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≥–Ω–æ–∑–∞** (–±—ã–ª–æ R¬≤):
                - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫—É—é –¥–æ–ª—é –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö –º–æ–¥–µ–ª—å –º–æ–∂–µ—Ç –æ–±—ä—è—Å–Ω–∏—Ç—å
                - **90%** = –æ—Ç–ª–∏—á–Ω–æ! –ú–æ–¥–µ–ª—å –ø–æ–Ω–∏–º–∞–µ—Ç 90% —Ç–æ–≥–æ, –ø–æ—á–µ–º—É –ø—Ä–æ–¥–∞–∂–∏ —Ä–∞—Å—Ç—É—Ç –∏–ª–∏ –ø–∞–¥–∞—é—Ç
                - **70%** = —Ö–æ—Ä–æ—à–æ, –º–æ–¥–µ–ª—å —É–ª–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏
                - **50%** = —Å–ª–∞–±–æ, –º–æ–¥–µ–ª—å –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–≤–∏–Ω—É –∫–∞—Ä—Ç–∏–Ω—ã
                
                üéØ **–¢–æ—á–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏** (–±—ã–ª–æ MAPE):
                - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç–æ—á–Ω–æ –º–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤
                - **90%** = –º–æ–¥–µ–ª—å –æ—á–µ–Ω—å —Ç–æ—á–Ω–∞—è, –æ—à–∏–±–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ 10%
                - **80%** = —Ö–æ—Ä–æ—à–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                - **60%** = –ø—Ä–∏–µ–º–ª–µ–º–æ, –Ω–æ –Ω—É–∂–Ω–∞ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å
                
                üìè **–°—Ä–µ–¥–Ω—è—è/–¢–∏–ø–∏—á–Ω–∞—è –æ—à–∏–±–∫–∞**:
                - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω–∞ —Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤ –≤ —Å—Ä–µ–¥–Ω–µ–º –æ—à–∏–±–∞–µ—Ç—Å—è –º–æ–¥–µ–ª—å
                - –ù–∞–ø—Ä–∏–º–µ—Ä: –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ 500 –∑–∞–∫–∞–∑–æ–≤, –∞ —É –≤–∞—Å 5000 –∑–∞–∫–∞–∑–æ–≤ –≤ –º–µ—Å—è—Ü = —ç—Ç–æ 10% –æ—à–∏–±–∫–∞
                
                üéØ **–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ**: –ï—Å–ª–∏ –º–æ–¥–µ–ª—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç üü¢ –∏–ª–∏ üü° - –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!
                """)
            
            col1, col2 = st.columns(2)
            
            with col1:
                st.subheader("üìä –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏")
                
                # –ü–æ–ª—É—á–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É
                quality_assessment = model.get_model_quality_assessment(st.session_state.X_test, st.session_state.y_test)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª–∏
                st.markdown(f"### {quality_assessment['status']}")
                st.progress(quality_assessment['quality_score'] / 100)
                st.markdown(f"**–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞:** {quality_assessment['quality_score']}/100")
                
                # –ë–∏–∑–Ω–µ—Å-–æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
                st.success(quality_assessment['business_explanation']['quality'])
                st.info(quality_assessment['business_explanation']['accuracy'])
                st.markdown(f"**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** {quality_assessment['recommendation']}")
                
                # –î–µ—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ (—Å–∫—Ä—ã—Ç—ã –≤ expander)
                with st.expander("üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏", expanded=False):
                    metrics = model.get_model_metrics(st.session_state.X_test, st.session_state.y_test)
                    for metric, value in metrics.items():
                        if '–¢–æ—á–Ω–æ—Å—Ç—å' in metric:
                            st.metric(metric, f"{value:.1f}%")
                        elif '–ö–∞—á–µ—Å—Ç–≤–æ' in metric:
                            st.metric(metric, f"{value:.3f} ({value*100:.0f}%)")
                        else:
                            st.metric(metric, f"{value:,.0f}")
            
            with col2:
                st.subheader("üìà –ü—Ä–æ–≥–Ω–æ–∑ vs –†–µ–∞–ª—å–Ω–æ—Å—Ç—å")
                y_pred = model.predict(st.session_state.X_test)
                
                fig = go.Figure()
                fig.add_trace(go.Scatter(
                    y=st.session_state.y_test,
                    mode='lines+markers',
                    name='–†–µ–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã',
                    line=dict(color='blue', width=3),
                    marker=dict(size=6)
                ))
                fig.add_trace(go.Scatter(
                    y=y_pred,
                    mode='lines+markers',
                    name='–ü—Ä–æ–≥–Ω–æ–∑ –º–æ–¥–µ–ª–∏',
                    line=dict(color='red', width=2, dash='dash'),
                    marker=dict(size=4)
                ))
                
                fig.update_layout(
                    title="–ù–∞—Å–∫–æ–ª—å–∫–æ —Ç–æ—á–Ω–æ –º–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–∫–∞–∑—ã",
                    xaxis_title="–ü–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏",
                    yaxis_title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤",
                    height=400,
                    template="plotly_white"
                )
                st.plotly_chart(fig, use_container_width=True)
                
                # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
                correlation = np.corrcoef(st.session_state.y_test, y_pred)[0, 1]
                if correlation >= 0.9:
                    st.success("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–≥–Ω–æ–∑ –æ—á–µ–Ω—å –±–ª–∏–∑–∫–æ —Å–ª–µ–¥—É–µ—Ç —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏")
                elif correlation >= 0.7:
                    st.info("üëç –•–æ—Ä–æ—à–æ! –ü—Ä–æ–≥–Ω–æ–∑ –≤ —Ü–µ–ª–æ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–Ω–¥—É")
                else:
                    st.warning("‚ö†Ô∏è –ú–æ–¥–µ–ª—å –Ω–µ –æ—á–µ–Ω—å —Ç–æ—á–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è")
        
        with tab2:
            st.subheader("–î–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è –ø—Ä–æ–¥–∞–∂")
            
            # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è
            with st.expander("‚ùì –ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è?", expanded=False):
                st.markdown("""
                **–î–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è –ø—Ä–æ–¥–∞–∂** –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤–∞—à–∏ –∑–∞–∫–∞–∑—ã:
                
                - **Base (–ë–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è)** = –∑–∞–∫–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–¥—É—Ç "—Å–∞–º–∏ –ø–æ —Å–µ–±–µ" (–æ—Ä–≥–∞–Ω–∏–∫–∞, –±—Ä–µ–Ω–¥–∏–Ω–≥, —Å–∞—Ä–∞—Ñ–∞–Ω–Ω–æ–µ —Ä–∞–¥–∏–æ)
                - **–ú–µ–¥–∏–∞-–∫–∞–Ω–∞–ª—ã** = –∑–∞–∫–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞
                
                **–ó–¥–æ—Ä–æ–≤–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –±–∏–∑–Ω–µ—Å–æ–≤:**
                - Base: 30-50% (–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–∞–∑—ã)
                - –ú–µ–¥–∏–∞: 50-70% (—Ä–µ–∫–ª–∞–º–Ω—ã–µ –∑–∞–∫–∞–∑—ã)
                
                **–ï—Å–ª–∏ Base = 100%** - –≤–æ–∑–º–æ–∂–Ω–æ, –º–æ–¥–µ–ª—å –Ω–µ –≤–∏–¥–∏—Ç —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Ä–µ–∫–ª–∞–º–æ–π –∏ –ø—Ä–æ–¥–∞–∂–∞–º–∏.
                """)
            
            try:
                # –†–∞—Å—á–µ—Ç –≤–∫–ª–∞–¥–æ–≤ –∫–∞–Ω–∞–ª–æ–≤
                contributions = model.get_media_contributions(st.session_state.X_train, st.session_state.y_train)
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
                if contributions and len(contributions) > 0:
                    # –ê–Ω–∞–ª–∏–∑ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏
                    total_contribution = sum(contributions.values())
                    base_share = contributions.get('Base', 0) / total_contribution * 100 if total_contribution > 0 else 0
                    
                    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ Base —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π
                    if base_share > 80:
                        st.warning(f"‚ö†Ô∏è –ë–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {base_share:.1f}% –ø—Ä–æ–¥–∞–∂. –í–æ–∑–º–æ–∂–Ω–æ, –º–æ–¥–µ–ª—å –ø–ª–æ—Ö–æ —É–ª–∞–≤–ª–∏–≤–∞–µ—Ç –≤–ª–∏—è–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã.")
                        st.info("üí° **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ**: —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã adstock/saturation")
                    elif base_share < 20:
                        st.warning(f"‚ö†Ô∏è –ë–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è –≤—Å–µ–≥–æ {base_share:.1f}%. –í–æ–∑–º–æ–∂–Ω–æ, –º–æ–¥–µ–ª—å –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –≤–ª–∏—è–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã.")
                    else:
                        st.success(f"‚úÖ –ó–¥–æ—Ä–æ–≤–∞—è –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è: –ë–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è {base_share:.1f}%, –ú–µ–¥–∏–∞ {100-base_share:.1f}%")
                    
                    # Waterfall chart
                    fig = self.visualizer.create_waterfall_chart(contributions)
                    st.plotly_chart(fig, use_container_width=True)
                    
                    # –¢–∞–±–ª–∏—Ü–∞ –≤–∫–ª–∞–¥–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                    st.subheader("üìã –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –≤–∫–ª–∞–¥–æ–≤")
                    contrib_df = pd.DataFrame(list(contributions.items()), columns=['–ö–∞–Ω–∞–ª', '–í–∫–ª–∞–¥'])
                    contrib_df['–í–∫–ª–∞–¥, %'] = (contrib_df['–í–∫–ª–∞–¥'] / contrib_df['–í–∫–ª–∞–¥'].sum() * 100).round(1)
                    contrib_df['–í–∫–ª–∞–¥'] = contrib_df['–í–∫–ª–∞–¥'].round(0).astype(int)
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é
                    contrib_df['–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è'] = contrib_df.apply(lambda row: 
                        "üè† –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–¥–∞–∂–∏" if row['–ö–∞–Ω–∞–ª'] == 'Base' 
                        else f"üì¢ –†–µ–∫–ª–∞–º–∞: {row['–í–∫–ª–∞–¥, %']}% –æ—Ç –æ–±—â–∏—Ö –ø—Ä–æ–¥–∞–∂", axis=1)
                    
                    st.dataframe(contrib_df, use_container_width=True, hide_index=True)
                    
                    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
                    st.subheader("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
                    media_contributions = {k: v for k, v in contributions.items() if k != 'Base'}
                    if media_contributions:
                        best_channel = max(media_contributions.items(), key=lambda x: x[1])
                        st.success(f"üéØ **–°–∞–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∫–∞–Ω–∞–ª**: {best_channel[0]} ({best_channel[1]:,.0f} –∑–∞–∫–∞–∑–æ–≤)")
                        
                        worst_channel = min(media_contributions.items(), key=lambda x: x[1])
                        if worst_channel[1] < 0:
                            st.warning(f"‚ö†Ô∏è **–ü—Ä–æ–±–ª–µ–º–Ω—ã–π –∫–∞–Ω–∞–ª**: {worst_channel[0]} –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –≤–∫–ª–∞–¥")
                        
                else:
                    st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤–∫–ª–∞–¥—ã –∫–∞–Ω–∞–ª–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–∏.")
                    
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏: {str(e)}")
                st.info("üí° **–†–µ—à–µ–Ω–∏–µ**: –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–æ–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å —Å –¥—Ä—É–≥–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ '–ú–æ–¥–µ–ª—å'")

        with tab3:  # ROAS –∞–Ω–∞–ª–∏–∑            
            st.subheader("ROAS –ø–æ –∫–∞–Ω–∞–ª–∞–º")

            # –ö—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ ROAS
            with st.expander("üìö –ß—Ç–æ —Ç–∞–∫–æ–µ ROAS –∏ –∫–∞–∫ –µ–≥–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å", expanded=False):
                st.markdown("""
                ### Return on Advertising Spend (ROAS)

                **ROAS** ‚Äî –∫–ª—é—á–µ–≤–∞—è –º–µ—Ç—Ä–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –û–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç,
                —Å–∫–æ–ª—å–∫–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –≤—ã—Ä—É—á–∫–∏ –ø—Ä–∏–Ω–æ—Å–∏—Ç –∫–∞–∂–¥—ã–π –≤–ª–æ–∂–µ–Ω–Ω—ã–π –≤ —Ä–µ–∫–ª–∞–º—É —Ä—É–±–ª—å:
                **ROAS = Incremental Revenue / Advertising Spend**

                **–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:**

                - ROAS = 3.0 –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∫–∞–∂–¥—ã–π —Ä—É–±–ª—å —Ä–µ–∫–ª–∞–º—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç 3 —Ä—É–±–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –≤—ã—Ä—É—á–∫–∏
                - ROAS = 1.0 ‚Äî —Ç–æ—á–∫–∞ –±–µ–∑—É–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏ (—Ä–µ–∫–ª–∞–º–∞ –æ–∫—É–ø–∞–µ—Ç —Å–µ–±—è)
                - ROAS < 1.0 ‚Äî —É–±—ã—Ç–æ—á–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ —Å –ø–æ–∑–∏—Ü–∏–∏ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–æ–π –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏

                **–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤ MMM:**
                1. **–ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ—Å—Ç—å vs. –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è**
                   - MMM –∏–∑–º–µ—Ä—è–µ—Ç –ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—É—é —Å–≤—è–∑—å —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                   - –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—É—é —Å–≤—è–∑—å
                   - –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π ROAS –≤—Å–µ–≥–¥–∞ –Ω–∏–∂–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–≥–æ

                2. **–í—Ä–µ–º–µ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã**
                   - –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π ROAS: —ç—Ñ—Ñ–µ–∫—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 1-4 –Ω–µ–¥–µ–ª—å
                   - –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π ROAS: –≤–∫–ª—é—á–∞–µ—Ç adstock —ç—Ñ—Ñ–µ–∫—Ç—ã (–¥–æ 12-52 –Ω–µ–¥–µ–ª—å)
                   - MMM —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π (–¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π) ROAS
                """)

            try:
                if hasattr(st.session_state, 'data') and st.session_state.data is not None:
                    roas_data = model.calculate_roas(st.session_state.data, st.session_state.selected_media)

                    if not roas_data.empty:
                        fig = self.visualizer.create_roas_comparison(roas_data)
                        st.plotly_chart(fig, use_container_width=True)

                        st.subheader("–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è ROAS")
                        st.dataframe(roas_data, use_container_width=True)
                    else:
                        st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å ROAS. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.")
                else:
                    st.warning("–î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ ROAS –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")

            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ ROAS: {str(e)}")
                demo_roas = pd.DataFrame({
                    'Channel': ['Facebook', 'Google', 'TikTok'],
                    'ROAS': [2.1, 2.8, 1.5]
                })
                fig = self.visualizer.create_roas_comparison(demo_roas)
                st.plotly_chart(fig, use_container_width=True)
       
            st.markdown("""
            **–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤ MMM:**

            1. **–ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ—Å—Ç—å vs. –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è**
               - MMM –∏–∑–º–µ—Ä—è–µ—Ç –ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—É—é —Å–≤—è–∑—å —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
               - –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—É—é —Å–≤—è–∑—å
               - –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π ROAS –≤—Å–µ–≥–¥–∞ –Ω–∏–∂–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–≥–æ

            2. **–í—Ä–µ–º–µ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã**
               - –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π ROAS: —ç—Ñ—Ñ–µ–∫—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 1-4 –Ω–µ–¥–µ–ª—å
               - –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π ROAS: –≤–∫–ª—é—á–∞–µ—Ç adstock —ç—Ñ—Ñ–µ–∫—Ç—ã (–¥–æ 12-52 –Ω–µ–¥–µ–ª—å)
               - MMM —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π (–¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π) ROAS

            **–ë–µ–Ω—á–º–∞—Ä–∫–∏ –ø–æ –∏–Ω–¥—É—Å—Ç—Ä–∏—è–º:**

            **E-commerce:**
            - Excellent: ROAS > 4.0
            - Good: ROAS 2.5-4.0
            - Acceptable: ROAS 1.5-2.5
            - Poor: ROAS < 1.5

            **FMCG:**
            - Excellent: ROAS > 3.0
            - Good: ROAS 2.0-3.0
            - Acceptable: ROAS 1.2-2.0
            - Poor: ROAS < 1.2

            **B2B Services:**
            - Excellent: ROAS > 5.0
            - Good: ROAS 3.0-5.0
            - Acceptable: ROAS 2.0-3.0
            - Poor: ROAS < 2.0

            **Marginal ROAS:**
            –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Ä—É–±–ª—è. –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–µ–Ω –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±—é–¥–∂–µ—Ç–∞.
            –ü—Ä–∞–≤–∏–ª–æ: –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å –±—é–¥–∂–µ—Ç –æ—Ç –∫–∞–Ω–∞–ª–æ–≤ —Å –Ω–∏–∑–∫–∏–º Marginal ROAS –∫ –∫–∞–Ω–∞–ª–∞–º —Å –≤—ã—Å–æ–∫–∏–º.

            **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫–∏:**
            - –ù–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç Customer Lifetime Value
            - –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –±—Ä–µ–Ω–¥–∏–Ω–≥–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
            - –ú–æ–∂–µ—Ç –Ω–µ–¥–æ–æ—Ü–µ–Ω–∏–≤–∞—Ç—å upper-funnel –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            """)
                
        with tab4:
            st.subheader("–ö—Ä–∏–≤—ã–µ –Ω–∞—Å—ã—â–µ–Ω–∏—è")
            
            # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫—Ä–∏–≤—ã—Ö –Ω–∞—Å—ã—â–µ–Ω–∏—è
            with st.expander("‚ùì –ß—Ç–æ —Ç–∞–∫–æ–µ –∫—Ä–∏–≤—ã–µ –Ω–∞—Å—ã—â–µ–Ω–∏—è?", expanded=False):
                st.markdown("""
                **–ö—Ä–∏–≤—ã–µ –Ω–∞—Å—ã—â–µ–Ω–∏—è** –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, –∫–∞–∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ –±—é–¥–∂–µ—Ç–∞.

                üéØ **–ü—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏:**
                - –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –ø–æ–ª–∏–≤–∞–µ—Ç–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –≤–æ–¥–æ–π
                - –°–Ω–∞—á–∞–ª–∞ –∫–∞–∂–¥–∞—è –∫–∞–ø–ª—è –≤–æ–¥—ã –æ—á–µ–Ω—å –ø–æ–º–æ–≥–∞–µ—Ç —Ä–æ—Å—Ç—É
                - –ù–æ –µ—Å–ª–∏ –ª–∏—Ç—å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ - —ç—Ñ—Ñ–µ–∫—Ç —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è
                - –¢–æ –∂–µ —Å–∞–º–æ–µ —Å —Ä–µ–∫–ª–∞–º–æ–π!

                üìà **–ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—Ä–∏–≤–∞—è:**
                - **–ù–∞—á–∞–ª–æ –∫—Ä–∏–≤–æ–π** = –∫–∞–∂–¥—ã–π —Ä—É–±–ª—å —Ä–µ–∫–ª–∞–º—ã –ø—Ä–∏–Ω–æ—Å–∏—Ç –º–Ω–æ–≥–æ –∑–∞–∫–∞–∑–æ–≤
                - **–°–µ—Ä–µ–¥–∏–Ω–∞** = —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–∞—è
                - **–ö–æ–Ω–µ—Ü –∫—Ä–∏–≤–æ–π** = –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä—É–±–ª–∏ –ø—Ä–∏–Ω–æ—Å—è—Ç –º–∞–ª–æ –∑–∞–∫–∞–∑–æ–≤ (–Ω–∞—Å—ã—â–µ–Ω–∏–µ)

                üí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**
                - **–ö—Ä—É—Ç–æ–π —Ä–æ—Å—Ç** –≤ –Ω–∞—á–∞–ª–µ = –∫–∞–Ω–∞–ª –Ω–µ–¥–æ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω, –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –±—é–¥–∂–µ—Ç
                - **–ü–æ–ª–æ–≥–∞—è –∫—Ä–∏–≤–∞—è** = –∫–∞–Ω–∞–ª –±–ª–∏–∑–æ–∫ –∫ –Ω–∞—Å—ã—â–µ–Ω–∏—é, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã
                - **–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è** = –≤–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞—Å—Ö–æ–¥–æ–≤

                üéØ **–ò–¥–µ–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è:** –¢—Ä–∞—Ç–∏—Ç—å –¥–æ —Ç–æ—á–∫–∏, –≥–¥–µ –∫—Ä–∏–≤–∞—è –Ω–∞—á–∏–Ω–∞–µ—Ç –≤—ã—Ä–∞–≤–Ω–∏–≤–∞—Ç—å—Å—è
                """)
            
            # –í—ã–±–æ—Ä –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            selected_channel = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:", st.session_state.selected_media)
            
            # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π –∫—Ä–∏–≤–æ–π –Ω–∞—Å—ã—â–µ–Ω–∏—è
            current_spend = st.session_state.data[selected_channel].mean()
            max_spend = current_spend * 3  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ 3x —Ç–µ–∫—É—â–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
            spend_range = np.linspace(0, max_spend, 100)
            
            # –ü—Ä–æ—Å—Ç–∞—è Hill saturation –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            alpha = 1.0
            gamma = current_spend * 0.7  # –¢–æ—á–∫–∞ –ø–æ–ª—É–Ω–∞—Å—ã—â–µ–Ω–∏—è –Ω–∞ 70% –æ—Ç —Ç–µ–∫—É—â–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
            saturation_curve = np.power(spend_range, alpha) / (np.power(spend_range, alpha) + np.power(gamma, alpha))
            
            fig = go.Figure()
            
            # –ö—Ä–∏–≤–∞—è –Ω–∞—Å—ã—â–µ–Ω–∏—è
            fig.add_trace(go.Scatter(
                x=spend_range,
                y=saturation_curve,
                mode='lines',
                name='–ö—Ä–∏–≤–∞—è –Ω–∞—Å—ã—â–µ–Ω–∏—è',
                line=dict(color='blue', width=3)
            ))
            
            # –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞—Å—Ö–æ–¥–æ–≤
            current_saturation = np.power(current_spend, alpha) / (np.power(current_spend, alpha) + np.power(gamma, alpha))
            fig.add_trace(go.Scatter(
                x=[current_spend],
                y=[current_saturation],
                mode='markers',
                name='–¢–µ–∫—É—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã',
                marker=dict(color='red', size=12, symbol='diamond'),
                hovertemplate=f"–¢–µ–∫—É—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: {current_spend:,.0f}<br>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {current_saturation:.2f}"
            ))
            
            # –ó–æ–Ω–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            efficient_spend = gamma * 1.2  # 120% –æ—Ç —Ç–æ—á–∫–∏ –ø–æ–ª—É–Ω–∞—Å—ã—â–µ–Ω–∏—è
            fig.add_vrect(
                x0=0, x1=efficient_spend,
                fillcolor="green", opacity=0.1,
                annotation_text="–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –∑–æ–Ω–∞", annotation_position="top left"
            )
            
            fig.add_vrect(
                x0=efficient_spend, x1=max_spend,
                fillcolor="orange", opacity=0.1,
                annotation_text="–ó–æ–Ω–∞ –Ω–∞—Å—ã—â–µ–Ω–∏—è", annotation_position="top right"
            )
            
            fig.update_layout(
                title=f"–ö—Ä–∏–≤–∞—è –Ω–∞—Å—ã—â–µ–Ω–∏—è –¥–ª—è {selected_channel.replace('_spend', '').title()}",
                xaxis_title="–†–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É (—Ä—É–±/–º–µ—Å—è—Ü)",
                yaxis_title="–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è)",
                height=500,
                template="plotly_white"
            )
            
            st.plotly_chart(fig, use_container_width=True)
            
            # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            col1, col2 = st.columns(2)
            
            with col1:
                st.subheader("üìä –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è")
                if current_spend < gamma:
                    st.success("üü¢ **–ù–µ–¥–æ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω**: –ú–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –±—é–¥–∂–µ—Ç –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                    recommendation = f"–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å –±—é–¥–∂–µ—Ç –¥–æ {gamma*1.2:,.0f} —Ä—É–±/–º–µ—Å—è—Ü"
                elif current_spend < efficient_spend:
                    st.info("üü° **–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å**: –•–æ—Ä–æ—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∑–∞—Ç—Ä–∞—Ç –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞")
                    recommendation = "–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞—Å—Ö–æ–¥–æ–≤ –±–ª–∏–∑–æ–∫ –∫ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–º—É"
                else:
                    st.warning("üü† **–ë–ª–∏–∑–∫–æ –∫ –Ω–∞—Å—ã—â–µ–Ω–∏—é**: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –º–∞–ª–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã")
                    recommendation = f"–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–∞—Å—Ç–∏ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ –¥—Ä—É–≥–∏–µ –∫–∞–Ω–∞–ª—ã"
                
                st.info(f"üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è**: {recommendation}")
            
            with col2:
                st.subheader("üéØ –ö–ª—é—á–µ–≤—ã–µ —Ç–æ—á–∫–∏")
                st.metric("–¢–µ–∫—É—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã", f"{current_spend:,.0f} —Ä—É–±")
                st.metric("–¢–æ—á–∫–∞ –ø–æ–ª—É–Ω–∞—Å—ã—â–µ–Ω–∏—è", f"{gamma:,.0f} —Ä—É–±", 
                         help="–£—Ä–æ–≤–µ–Ω—å —Ä–∞—Å—Ö–æ–¥–æ–≤, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è 50% –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞")
                st.metric("–ì—Ä–∞–Ω–∏—Ü–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", f"{efficient_spend:,.0f} —Ä—É–±",
                         help="–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è –∫–∞–∂–¥—ã–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä—É–±–ª—å –ø—Ä–∏–Ω–æ—Å–∏—Ç –º–∞–ª–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞")
                
                # –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞
                potential_increase = (efficient_spend - current_spend) / current_spend * 100 if current_spend > 0 else 0
                if potential_increase > 20:
                    st.success(f"üìà –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞: +{potential_increase:.0f}%")
                elif potential_increase > 0:
                    st.info(f"üìà –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞: +{potential_increase:.0f}%")
                else:
                    st.warning("üìä –ö–∞–Ω–∞–ª –±–ª–∏–∑–æ–∫ –∫ –Ω–∞—Å—ã—â–µ–Ω–∏—é")

    def show_optimization(self):
        st.header("üí∞ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±—é–¥–∂–µ—Ç–∞")
        
        # –ì–ª–∞–≤–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞
        with st.expander("‚ùì –ß—Ç–æ —Ç–∞–∫–æ–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±—é–¥–∂–µ—Ç–∞?", expanded=False):
            st.markdown("""
            **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±—é–¥–∂–µ—Ç–∞** - —ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –Ω–∞–∏–ª—É—á—à–µ–≥–æ —Å–ø–æ—Å–æ–±–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à–∏ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –¥–µ–Ω—å–≥–∏.
            
            üéØ **–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä:**
            –£ –≤–∞—Å –µ—Å—Ç—å 1 –º–ª–Ω —Ä—É–±–ª–µ–π –Ω–∞ —Ä–µ–∫–ª–∞–º—É. –í–æ–ø—Ä–æ—Å: –∫–∞–∫ –∏—Ö —Ä–∞–∑–¥–µ–ª–∏—Ç—å –º–µ–∂–¥—É Facebook, Google, TikTok?
            
            **–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥:**
            - Facebook: 300,000 —Ä—É–± (30%)
            - Google: 500,000 —Ä—É–± (50%)  
            - TikTok: 200,000 —Ä—É–± (20%)
            - **–†–µ–∑—É–ª—å—Ç–∞—Ç:** 5,000 –∑–∞–∫–∞–∑–æ–≤
            
            **–ü–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:**
            - Facebook: 250,000 —Ä—É–± (25%)
            - Google: 600,000 —Ä—É–± (60%)
            - TikTok: 150,000 —Ä—É–± (15%)
            - **–†–µ–∑—É–ª—å—Ç–∞—Ç:** 5,400 –∑–∞–∫–∞–∑–æ–≤ (+400 –∑–∞–∫–∞–∑–æ–≤!)
            
            üí° **–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
            1. –ú–æ–¥–µ–ª—å –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            2. –ù–∞—Ö–æ–¥–∏—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            3. –£—á–∏—Ç—ã–≤–∞–µ—Ç –≤–∞—à–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è (–º–∏–Ω–∏–º—É–º/–º–∞–∫—Å–∏–º—É–º –ø–æ –∫–∞–Ω–∞–ª–∞–º)
            
            üéØ **–¶–µ–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:**
            - **–ú–∞–∫—Å–∏–º—É–º –∑–∞–∫–∞–∑–æ–≤** = –ø–æ–ª—É—á–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –∑–∞–∫–∞–∑–æ–≤
            - **–ú–∞–∫—Å–∏–º—É–º ROAS** = –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –æ—Ç–¥–∞—á—É —Å —Ä—É–±–ª—è
            - **–ú–∞–∫—Å–∏–º—É–º ROI** = –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –ø—Ä–∏–±—ã–ª—å
            """)
        
        if not st.session_state.model_fitted:
            st.warning("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å –≤ —Ä–∞–∑–¥–µ–ª–µ '–ú–æ–¥–µ–ª—å'")
            st.info("üí° –ú–æ–¥–µ–ª—å –Ω—É–∂–Ω–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–∞–Ω–∞–ª–æ–≤ –∏ –ø–æ–∏—Å–∫–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è")
            return
        
        tab1, tab2 = st.tabs(["‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏", "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"])
        
        with tab1:
            st.subheader("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏")
            
            # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            with st.expander("‚ùì –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é?", expanded=False):
                st.markdown("""
                **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –ø–æ–¥ –≤–∞—à–∏ –±–∏–∑–Ω–µ—Å-–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
                
                üí∞ **–û–±—â–∏–π –±—é–¥–∂–µ—Ç:**
                - –°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –¥–µ–Ω–µ–≥ —É –≤–∞—Å –µ—Å—Ç—å –Ω–∞ —Ä–µ–∫–ª–∞–º—É –≤ –º–µ—Å—è—Ü
                - –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç —ç—Ç–∏ –¥–µ–Ω—å–≥–∏ –º–µ–∂–¥—É –∫–∞–Ω–∞–ª–∞–º–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ
                
                üéØ **–¶–µ–ª—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:**
                - **–ú–∞–∫—Å–∏–º—É–º –∑–∞–∫–∞–∑–æ–≤** = –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤—É (–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–æ—Å—Ç–∞)
                - **–ú–∞–∫—Å–∏–º—É–º ROAS** = –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏)
                - **–ú–∞–∫—Å–∏–º—É–º ROI** = –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —á–∏—Å—Ç–æ–π –ø—Ä–∏–±—ã–ª–∏
                
                üöß **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∫–∞–Ω–∞–ª–∞–º:**
                - **–ú–∏–Ω–∏–º—É–º** = –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Å—É–º–º—ã —Ç—Ä–∞—Ç–∏—Ç—å –Ω–µ–ª—å–∑—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∏–Ω–∏–º—É–º –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É)
                - **–ú–∞–∫—Å–∏–º—É–º** = –±–æ–ª—å—à–µ —ç—Ç–æ–π —Å—É–º–º—ã —Ç—Ä–∞—Ç–∏—Ç—å –Ω–µ–ª—å–∑—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ª–∏–º–∏—Ç –∫–æ–º–∞–Ω–¥—ã)
                - –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å 0 –∏–ª–∏ 100% –Ω–∞ –æ–¥–∏–Ω –∫–∞–Ω–∞–ª
                
                **–ü—Ä–∏–º–µ—Ä –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π:**
                - Facebook: –º–∏–Ω 100–∫ (–∫–æ–º–∞–Ω–¥–∞ —Å–ø—Ä–∞–≤–∏—Ç—Å—è), –º–∞–∫—Å 500–∫ (–±–æ–ª—å—à–µ –Ω–µ –ø–æ—Ç—è–Ω–µ–º)
                - Google: –º–∏–Ω 200–∫ (–∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è), –º–∞–∫—Å –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
                """)
            
            col1, col2 = st.columns(2)
            
            with col1:
                st.subheader("üí∞ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
                total_budget = st.number_input(
                    "–û–±—â–∏–π –º–µ—Å—è—á–Ω—ã–π –±—é–¥–∂–µ—Ç (—Ä—É–±)", 
                    min_value=10000, 
                    value=1000000, 
                    step=50000,
                    help="–û–±—â–∞—è —Å—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã –≥–æ—Ç–æ–≤—ã —Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ —Ä–µ–∫–ª–∞–º—É –≤ –º–µ—Å—è—Ü"
                )
                
                optimization_target = st.selectbox(
                    "–¶–µ–ª—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏", 
                    ["maximize_sales", "maximize_roas", "maximize_roi"],
                    format_func=lambda x: {
                        "maximize_sales": "üìà –ú–∞–∫—Å–∏–º—É–º –∑–∞–∫–∞–∑–æ–≤ (—Ä–æ—Å—Ç –æ–±—ä–µ–º–æ–≤)",
                        "maximize_roas": "üí∞ –ú–∞–∫—Å–∏–º—É–º ROAS (—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)",
                        "maximize_roi": "üíé –ú–∞–∫—Å–∏–º—É–º ROI (–ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å)"
                    }[x],
                    help="–ß—Ç–æ –≤–∞–∂–Ω–µ–µ: –±–æ–ª—å—à–µ –∑–∞–∫–∞–∑–æ–≤, –≤—ã—à–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏–ª–∏ –±–æ–ª—å—à–µ –ø—Ä–∏–±—ã–ª–∏?"
                )
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ä–∞—Å—Ö–æ–¥ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                current_total = sum(
                    st.session_state.data[ch].mean()
                    for ch in st.session_state.selected_media
                )
                st.info(f"üí° –¢–µ–∫—É—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: {current_total:,.0f} —Ä—É–±/–º–µ—Å—è—Ü")

                if current_total == 0:
                    st.info("‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ—à–ª—ã—Ö —Ä–∞—Å—Ö–æ–¥–∞—Ö. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞: 0%")
                elif total_budget != current_total:
                    change_pct = (
                        (total_budget - current_total) / current_total * 100
                    )
                    if change_pct > 0:
                        st.success(f"üìà –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ {change_pct:.0f}%")
                    else:
                        st.warning(
                            f"üìâ –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ {abs(change_pct):.0f}%"
                        )
                
            with col2:
                st.subheader("üöß –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∫–∞–Ω–∞–ª–∞–º")
                
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
                use_constraints = st.checkbox(
                    "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∫–∞–Ω–∞–ª–∞–º", 
                    value=False,
                    help="–ï—Å–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω–æ, —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ª—é–±–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ"
                )
                
                constraints = {}
                if use_constraints:
                    st.info("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã")
                    
                    for channel in st.session_state.selected_media:
                        with st.expander(f"‚öôÔ∏è {channel.replace('_spend', '').title()}", expanded=False):
                            current_avg = st.session_state.data[channel].mean()
                            
                            col_min, col_max = st.columns(2)
                            with col_min:
                                min_spend = st.number_input(
                                    f"–ú–∏–Ω–∏–º—É–º", 
                                    min_value=0, 
                                    max_value=total_budget//2, 
                                    value=max(0, int(current_avg * 0.5)),
                                    step=10000,
                                    key=f"min_{channel}",
                                    help="–ú–µ–Ω—å—à–µ —ç—Ç–æ–π —Å—É–º–º—ã —Ç—Ä–∞—Ç–∏—Ç—å –Ω–µ–ª—å–∑—è/–Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ"
                                )
                            with col_max:
                                max_spend = st.number_input(
                                    f"–ú–∞–∫—Å–∏–º—É–º", 
                                    min_value=min_spend, 
                                    max_value=total_budget, 
                                    value=min(total_budget, int(current_avg * 2)),
                                    step=10000,
                                    key=f"max_{channel}",
                                    help="–ë–æ–ª—å—à–µ —ç—Ç–æ–π —Å—É–º–º—ã —Ç—Ä–∞—Ç–∏—Ç—å –Ω–µ–ª—å–∑—è/–Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ"
                                )
                            
                            constraints[channel] = {'min': min_spend, 'max': max_spend}
                            
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                            st.caption(f"–°–µ–π—á–∞—Å —Ç—Ä–∞—Ç–∏—Ç–µ: {current_avg:,.0f} —Ä—É–±/–º–µ—Å—è—Ü")
                else:
                    st.info("üîì –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã - —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–π–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ")
                    constraints = {}
        
        with tab2:
            if st.button("üéØ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±—é–¥–∂–µ—Ç", type="primary"):
                with st.spinner("–ü–æ–∏—Å–∫ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è..."):
                    
                    # –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                    optimal_allocation = self.optimizer.optimize_budget(
                        model=st.session_state.model,
                        total_budget=total_budget,
                        constraints=constraints,
                        target=optimization_target
                    )
                    
                    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                    st.success("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                    
                    col1, col2 = st.columns(2)
                    
                    with col1:
                        st.subheader("–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ")
                        optimal_df = pd.DataFrame(list(optimal_allocation['allocation'].items()), 
                                                columns=['–ö–∞–Ω–∞–ª', '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç'])
                        optimal_df['–î–æ–ª—è, %'] = (optimal_df['–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç'] / total_budget * 100).round(1)
                        st.dataframe(optimal_df, use_container_width=True)
                        
                        # –ú–µ—Ç—Ä–∏–∫–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è
                        st.metric("–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–µ –ø—Ä–æ–¥–∞–∂–∏", f"{optimal_allocation['predicted_sales']:,.0f}")
                        st.metric("–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π ROAS", f"{optimal_allocation['predicted_roas']:.2f}")
                        st.metric("–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π ROI", f"{optimal_allocation['predicted_roi']:.2f}")
                    
                    with col2:
                        st.subheader("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π")

                        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞–Ω–∞–ª–∞–º
                        current_allocation = {
                            ch: st.session_state.data[ch].mean()
                            for ch in st.session_state.selected_media
                        }

                        # –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
                        fig = self.visualizer.create_optimization_results(
                            current_allocation,
                            optimal_allocation['allocation']
                        )
                        st.plotly_chart(fig, use_container_width=True)

    def show_scenarios(self):
        st.header("üîÆ –°—Ü–µ–Ω–∞—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑")

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–µ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        with st.expander("üìä –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è —Å—Ü–µ–Ω–∞—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ", expanded=False):
            st.markdown("""
        ### –°—Ü–µ–Ω–∞—Ä–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Marketing Mix Modeling
        
        **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:**
        –°—Ü–µ–Ω–∞—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ ‚Äî —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –æ—Ü–µ–Ω–∫–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö 
        —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ –º–µ–¥–∏–∞-–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –ø—Ä–∏ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –≤–Ω–µ—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö.
        
        **–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤—ã:**
        
        1. **–î–µ—Ç–µ—Ä–º–∏–Ω–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ**
           - –ú–æ–¥–µ–ª—å –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–µ–¥–∏–∞-—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π
           - –£—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–µ–ª–∏–Ω–µ–π–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (adstock, saturation)
           - –í–∫–ª—é—á–∞–µ—Ç –≤–ª–∏—è–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
        
        2. **–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏–∫–∞**
           - –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–≤–Ω–æ–≤–µ—Å–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
           - Ceteris paribus –ø—Ä–∏–Ω—Ü–∏–ø: –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º
           - –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–æ–ª–∏—Ä–æ–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π
        
        **–¢–∏–ø–æ–ª–æ–≥–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:**
        
        **1. –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π**
        - –ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–∞—è —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å (seasonality > 1.0)
        - –ù–∏–∑–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (competition < 1.0)
        - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ: –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        
        **2. –ü–µ—Å—Å–∏–º–∏—Å—Ç–∏—á–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π**
        - –ù–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–∞—è —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å (seasonality < 1.0)
        - –í—ã—Å–æ–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (competition > 1.0)
        - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ: –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ contingency
        
        **3. –ë–∞–∑–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π**
        - –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ —É—Å–ª–æ–≤–∏—è (—Ñ–∞–∫—Ç–æ—Ä—ã = 1.0)
        - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        
        **–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ñ–∞–∫—Ç–æ—Ä–æ–≤:**
        
        **–°–µ–∑–æ–Ω–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä:**
        - 1.5 = +50% –∫ –±–∞–∑–æ–≤–æ–º—É —Å–ø—Ä–æ—Å—É (–≤—ã—Å–æ–∫–∏–π —Å–µ–∑–æ–Ω)
        - 1.0 = –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥
        - 0.7 = -30% –∫ –±–∞–∑–æ–≤–æ–º—É —Å–ø—Ä–æ—Å—É (–Ω–∏–∑–∫–∏–π —Å–µ–∑–æ–Ω)
        
        **–§–∞–∫—Ç–æ—Ä –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏:**
        - 1.3 = —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –Ω–∞ 30%
        - 1.0 = —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è —Å—Ä–µ–¥–∞
        - 0.8 = —Å–Ω–∏–∂–µ–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –Ω–∞ 20%
        """)
    
        if not st.session_state.model_fitted:
            st.warning("–°–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å")
            return

        tab1, tab2 = st.tabs(["–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"])

        with tab1:
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º —Å—Ü–µ–Ω–∞—Ä–∏—è
            with st.expander("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", expanded=False):
                st.markdown("""
            ### –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
            
            **–ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:**
            
            **ROAS (Return on Ad Spend):**
            - **–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç**: ROAS ‚â• 3.0
            - **–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç**: ROAS 2.0-3.0
            - **–ü—Ä–∏–µ–º–ª–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç**: ROAS 1.5-2.0
            - **–ù–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π**: ROAS < 1.5
            
            **–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–µ –ø—Ä–æ–¥–∞–∂–∏:**
            - –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Å —Ç–µ–∫—É—â–∏–º —É—Ä–æ–≤–Ω–µ–º –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            - –£—á–∏—Ç—ã–≤–∞–π—Ç–µ —Å–µ–∑–æ–Ω–Ω—ã–µ –∫–æ–ª–µ–±–∞–Ω–∏—è
            - –û—Ü–µ–Ω–∏–≤–∞–π—Ç–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç—å —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
            
            **–û–±—â–∏–π –±—é–¥–∂–µ—Ç:**
            - –î–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º
            - –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ cash flow
            - –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Å —Ç–µ–∫—É—â–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥
            
            **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—é —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:**
            
            1. **–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥**: –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞ ¬±20% –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
            2. **–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ä–æ—Å—Ç**: —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ 50-100%
            3. **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è**: –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
            4. **–ö—Ä–∏–∑–∏—Å–Ω—ã–π**: —Å–Ω–∏–∂–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ 30-50%
            """)
        
        st.subheader("–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è")
        
        scenario_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è", "–°—Ü–µ–Ω–∞—Ä–∏–π 1")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–æ–≤")
            scenario_budget = {}
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            st.markdown("**–¢–µ–∫—É—â–∏–µ —Å—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã:**")
            current_totals = {}
            for channel in st.session_state.selected_media:
                current_value = st.session_state.data[channel].mean()
                current_totals[channel] = current_value
                st.caption(f"{channel}: {current_value:,.0f} —Ä—É–±")
            
            total_current = sum(current_totals.values())
            st.caption(f"**–û–±—â–∏–π —Ç–µ–∫—É—â–∏–π –±—é–¥–∂–µ—Ç: {total_current:,.0f} —Ä—É–±**")
            
            st.markdown("**–ù–æ–≤–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:**")
            for channel in st.session_state.selected_media:
                current_value = current_totals[channel]
                scenario_budget[channel] = st.number_input(
                    f"–ë—é–¥–∂–µ—Ç {channel}",
                    min_value=0,
                    value=int(current_value),
                    step=1000,
                    key=f"scenario_{channel}",
                    help=f"–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {current_value:,.0f} —Ä—É–±"
                )
        
        with col2:
            st.subheader("–í–Ω–µ—à–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—è—Å–Ω–µ–Ω–∏—è –∫ –≤–Ω–µ—à–Ω–∏–º —Ñ–∞–∫—Ç–æ—Ä–∞–º
            st.markdown("""
            **–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –≤–Ω–µ—à–Ω–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤:**
            - **1.0** = –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
            - **>1.0** = –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è  
            - **<1.0** = –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
            """)
            
            seasonality_factor = st.slider(
                "–°–µ–∑–æ–Ω–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä", 0.5, 2.0, 1.0, 0.1,
                help="1.5 = –≤—ã—Å–æ–∫–∏–π —Å–µ–∑–æ–Ω (+50%), 0.7 = –Ω–∏–∑–∫–∏–π —Å–µ–∑–æ–Ω (-30%)"
            )
            competition_factor = st.slider(
                "–§–∞–∫—Ç–æ—Ä –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏", 0.5, 2.0, 1.0, 0.1,
                help="1.3 = —É—Å–∏–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏ (-30% —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏), 0.8 = –æ—Å–ª–∞–±–ª–µ–Ω–∏–µ (+20%)"
            )
            
            # –ü—Ä–æ–≥–Ω–æ–∑ –¥–æ —Ä–∞—Å—á–µ—Ç–∞
            new_total = sum(scenario_budget.values())
            budget_change = ((new_total - total_current) / total_current * 100) if total_current > 0 else 0
            
            st.markdown("### –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞")
            st.metric("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞", f"{budget_change:+.1f}%")
            
            if budget_change > 50:
                st.warning("–°—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏.")
            elif budget_change > 20:
                st.info("–£–º–µ—Ä–µ–Ω–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞. –•–æ—Ä–æ—à–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–æ—Å—Ç–∞.")
            elif budget_change > -20:
                st.success("–ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –§–æ–∫—É—Å –Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è.")
            else:
                st.error("–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞. –û–∂–∏–¥–∞–µ—Ç—Å—è —Å–Ω–∏–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.")
            
            # –ü—Ä–æ–≥–Ω–æ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å—Ü–µ–Ω–∞—Ä–∏—è
            if st.button("üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑"):
                predicted_results = st.session_state.model.predict_scenario(
                    scenario_budget, seasonality_factor, competition_factor
                )
                
                st.markdown("### –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≥–Ω–æ–∑–∞")
                
                # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                sales_result = predicted_results['sales']
                roas_result = predicted_results['roas']
                total_spend = sum(scenario_budget.values())
                
                col_a, col_b, col_c = st.columns(3)
                
                with col_a:
                    st.metric("–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–µ –ø—Ä–æ–¥–∞–∂–∏", f"{sales_result:,.0f}")
                
                with col_b:
                    # –¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è ROAS
                    if roas_result >= 3.0:
                        st.success(f"**ROAS: {roas_result:.2f}** (–û—Ç–ª–∏—á–Ω–æ)")
                    elif roas_result >= 2.0:
                        st.info(f"**ROAS: {roas_result:.2f}** (–•–æ—Ä–æ—à–æ)")
                    elif roas_result >= 1.5:
                        st.warning(f"**ROAS: {roas_result:.2f}** (–ü—Ä–∏–µ–º–ª–µ–º–æ)")
                    else:
                        st.error(f"**ROAS: {roas_result:.2f}** (–ù–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ)")
                
                with col_c:
                    st.metric("–û–±—â–∏–π –±—é–¥–∂–µ—Ç", f"{total_spend:,.0f}")
                
                # –†–∞–∑–≤–µ—Ä–Ω—É—Ç–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
                st.markdown("### –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                
                # –ê–Ω–∞–ª–∏–∑ ROAS
                if roas_result >= 3.0:
                    st.success("""
                    **–û—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã**: ROAS –≤—ã—à–µ 3.0 —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤—ã—Å–æ–∫—É—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 
                    –º–µ–¥–∏–∞-–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è.
                    """)
                elif roas_result >= 2.0:
                    st.info("""
                    **–•–æ—Ä–æ—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã**: ROAS –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 2.0-3.0 –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–µ–º–ª–µ–º—É—é 
                    —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –í–æ–∑–º–æ–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è.
                    """)
                elif roas_result >= 1.5:
                    st.warning("""
                    **–ü—Ä–∏–µ–º–ª–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã**: ROAS 1.5-2.0 –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ 
                    —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π.
                    """)
                else:
                    st.error("""
                    **–ù–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã**: ROAS –Ω–∏–∂–µ 1.5 —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ 
                    –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –ù–µ–æ–±—Ö–æ–¥–∏–º –ø–µ—Ä–µ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞.
                    """)
                
                # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂
                # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å "—Ç–∏–ø–∏—á–Ω—ã–º" —É—Ä–æ–≤–Ω–µ–º
                baseline_sales = st.session_state.data[st.session_state.target_var].mean() if hasattr(st.session_state, 'target_var') else 50000
                sales_change = ((sales_result - baseline_sales) / baseline_sales * 100) if baseline_sales > 0 else 0
                
                if sales_change > 20:
                    st.success(f"–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π —Ä–æ—Å—Ç –ø—Ä–æ–¥–∞–∂: +{sales_change:.1f}%. –°–∏–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–æ—Å—Ç–∞.")
                elif sales_change > 5:
                    st.info(f"–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π —Ä–æ—Å—Ç –ø—Ä–æ–¥–∞–∂: +{sales_change:.1f}%. –£–º–µ—Ä–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç.")
                elif sales_change > -5:
                    st.warning(f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂: {sales_change:+.1f}%. –°—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.")
                else:
                    st.error(f"–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂: {sales_change:.1f}%. –†–∏—Å–∫–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è.")
    
        with tab2:
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
            with st.expander("üìà –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", expanded=False):
                st.markdown("""
            ### –ü—Ä–∏–Ω—Ü–∏–ø—ã —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π

            **–ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:**

            **1. –¢–µ–∫—É—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π (Current)**
            - –ë–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            - –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å—Ä–µ–¥–Ω–∏—Ö —Ä–∞—Å—Ö–æ–¥–∞—Ö
            - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ status quo

            **2. Digital Focus**
            - 80% –±—é–¥–∂–µ—Ç–∞ –Ω–∞ —Ü–∏—Ñ—Ä–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã, 20% –Ω–∞ –æ—Ñ–ª–∞–π–Ω
            - –°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∏–∑–º–µ—Ä–∏–º–æ—Å—Ç–∏ –∏ —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥–∞
            - –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è D2C –±—Ä–µ–Ω–¥–æ–≤ –∏ e-commerce

            **3. Balanced**
            - –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ–∂–¥—É –≤—Å–µ–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏
            - –°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–∏—Å–∫–æ–≤
            - –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤

            **4. Performance**
            - –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–∞—Ö —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏ –≤—ã—Å–æ–∫–∏–º ROAS
            - 70% –±—é–¥–∂–µ—Ç–∞ –Ω–∞ Google + Facebook, 30% –Ω–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ
            - –°—Ç—Ä–∞—Ç–µ–≥–∏—è –º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏–∏ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

            **–ö—Ä–∏—Ç–µ—Ä–∏–∏ –≤—ã–±–æ—Ä–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:**

            1. **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏**: –≤—ã–±–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –æ–±—ä–µ–º–æ–º –ø—Ä–æ–¥–∞–∂
            2. **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ROAS**: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
            3. **–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∏—Å–∫**: –≤—ã–±–æ—Ä –Ω–∞–∏–±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
            4. **–ë—é–¥–∂–µ—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è**: —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º
            """)

            st.subheader("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
            
            # –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
            current_avg = {channel: st.session_state.data[channel].mean() 
                          for channel in st.session_state.selected_media}
            total_current = sum(current_avg.values())
            
            scenarios = {
                "–¢–µ–∫—É—â–∏–π": current_avg,
                "Digital Focus": {
                    channel: (total_current * 0.8 / len([ch for ch in st.session_state.selected_media if 'offline' not in ch.lower()]) 
                             if 'offline' not in channel.lower() else total_current * 0.2)
                    for channel in st.session_state.selected_media
                },
                "Balanced": {channel: total_current / len(st.session_state.selected_media) 
                           for channel in st.session_state.selected_media},
                "Performance": {
                    channel: (total_current * 0.7 / len([ch for ch in st.session_state.selected_media if ch in ['google_spend', 'facebook_spend']])
                             if channel in ['google_spend', 'facebook_spend'] else total_current * 0.3 / (len(st.session_state.selected_media) - 2))
                    for channel in st.session_state.selected_media
                }
            }
            
            # –†–∞—Å—á–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –¥–ª—è –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
            scenario_results = {}
            for name, budget in scenarios.items():
                results = st.session_state.model.predict_scenario(budget, 1.0, 1.0)
                scenario_results[name] = results
            
            # –¢–∞–±–ª–∏—Ü–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            comparison_df = pd.DataFrame(scenario_results).T
            comparison_df = comparison_df.round(2)
            st.dataframe(comparison_df, use_container_width=True)
            
            # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            fig = make_subplots(
                rows=1, cols=3,
                subplot_titles=['–ü—Ä–æ–¥–∞–∂–∏', 'ROAS', '–ë—é–¥–∂–µ—Ç']
            )
            
            scenarios_list = list(scenario_results.keys())
            
            # –ü—Ä–æ–¥–∞–∂–∏
            fig.add_trace(
                go.Bar(x=scenarios_list, y=[scenario_results[s]['sales'] for s in scenarios_list], 
                      name='–ü—Ä–æ–¥–∞–∂–∏', showlegend=False),
                row=1, col=1
            )
            
            # ROAS
            fig.add_trace(
                go.Bar(x=scenarios_list, y=[scenario_results[s]['roas'] for s in scenarios_list], 
                      name='ROAS', showlegend=False),
                row=1, col=2
            )
            
            # –ë—é–¥–∂–µ—Ç
            fig.add_trace(
                go.Bar(x=scenarios_list, y=[scenario_results[s]['total_spend'] for s in scenarios_list], 
                      name='–ë—é–¥–∂–µ—Ç', showlegend=False),
                row=1, col=3
            )
            
            fig.update_layout(title="–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", height=400)
            st.plotly_chart(fig, use_container_width=True)
            # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ —Ç–∞–±–ª–∏—Ü—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            if 'scenario_results' in locals():
                st.markdown("### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")
            
                # –ù–∞—Ö–æ–¥–∏–º –ª—É—á—à–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π –ø–æ –∫–∞–∂–¥–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é
                best_sales = max(scenario_results.keys(), key=lambda x: scenario_results[x]['sales'])
                best_roas = max(scenario_results.keys(), key=lambda x: scenario_results[x]['roas'])
                most_efficient = min(scenario_results.keys(), key=lambda x: scenario_results[x]['total_spend'])

                col1, col2, col3 = st.columns(3)

                with col1:
                    st.success(f"""
                **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏**: {best_sales}

                –ü—Ä–æ–¥–∞–∂–∏: {scenario_results[best_sales]['sales']:,.0f}

                –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è: –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –æ–±—ä–µ–º–æ–≤
                """)

                with col2:
                    st.info(f"""
                **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ROAS**: {best_roas}

                ROAS: {scenario_results[best_roas]['roas']:.2f}

                –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è: –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                """)

                with col3:
                    st.warning(f"""
                **–ù–∞–∏–º–µ–Ω—å—à–∏–π –±—é–¥–∂–µ—Ç**: {most_efficient}

                –ë—é–¥–∂–µ—Ç: {scenario_results[most_efficient]['total_spend']:,.0f}

                –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è: –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
                """)

                # –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                st.markdown("### –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
            
                # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º —Å—Ü–µ–Ω–∞—Ä–∏–µ–º
                current_results = scenario_results.get('–¢–µ–∫—É—â–∏–π', scenario_results.get('Current'))
                if current_results:
                    for name, results in scenario_results.items():
                        if name not in ['–¢–µ–∫—É—â–∏–π', 'Current']:
                            sales_improvement = ((results['sales'] - current_results['sales']) / current_results['sales'] * 100)
                            roas_improvement = ((results['roas'] - current_results['roas']) / current_results['roas'] * 100)
                        
                            if sales_improvement > 10 and roas_improvement > 5:
                                st.success(f"""
                            **{name}**: –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ –≤—Å–µ–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º
                            - –†–æ—Å—Ç –ø—Ä–æ–¥–∞–∂: +{sales_improvement:.1f}%
                            - –£–ª—É—á—à–µ–Ω–∏–µ ROAS: +{roas_improvement:.1f}%
                            - **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è**: –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è
                            """)
                            elif sales_improvement > 5:
                                st.info(f"""
                            **{name}**: –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–∏–º–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                            - –†–æ—Å—Ç –ø—Ä–æ–¥–∞–∂: +{sales_improvement:.1f}%
                            - –ò–∑–º–µ–Ω–µ–Ω–∏–µ ROAS: {roas_improvement:+.1f}%
                            - **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è**: –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ñ–∞–∑—ã —Ä–æ—Å—Ç–∞
                            """)
                            elif roas_improvement > 10:
                                st.info(f"""
                            **{name}**: –ü–æ–≤—ã—à–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
                            - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂: {sales_improvement:+.1f}%
                            - –£–ª—É—á—à–µ–Ω–∏–µ ROAS: +{roas_improvement:.1f}%
                            - **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è**: –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                            """)
                            else:
                                st.warning(f"""
                            **{name}**: –ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
                            - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂: {sales_improvement:+.1f}%
                            - –ò–∑–º–µ–Ω–µ–Ω–∏–µ ROAS: {roas_improvement:+.1f}%
                            - **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è**: –í—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞
                            """)
if __name__ == "__main__":
    app = MMM_App()
    app.run()
